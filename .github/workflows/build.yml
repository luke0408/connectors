name: build
on:
  push:
    paths:
      - "src/**"
      - "test/**"
      - "package.json"
      - ".github/workflows/build.yml"
  # pull_request_target:
  #   paths:
  #     - "src/**"
  #     - "test/**"
  #     - "package.json"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        run: npm install
      - name: Build Test Program
        run: |
          npm run build:sdk
          npm run build:test
      - name: Upload build artifact and node_modules
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --exclude sweet_tracker korea_exim kakao jira slack github figma discord google_ads google_slides google_calendar google_docs google_drive

  test-kakao:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include kakao

  test-jira:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include jira

  test-slack:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include slack

  test-open_data:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include open_data

  test-github:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include github

  test-figma:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include figma

  test-discord:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include discord

  test-google_slides:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include google_slides

  test-google_calendar:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include google_calendar

  test-google_docs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include google_docs

  test-google_drive:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 코드 재체크아웃하여 package.json 확보
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: |
            ./bin
            ./node_modules
      - name: install dependencies
        run: npm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: test
        run: npm run test -- --include google_drive
